[{"D:\\Examples\\ReactJS\\manage-map\\src\\cards\\index.js":"1","D:\\Examples\\ReactJS\\manage-map\\src\\form-uplaod-image\\index.js":"2","D:\\Examples\\ReactJS\\manage-map\\src\\index.js":"3","D:\\Examples\\ReactJS\\manage-map\\src\\detail\\index.js":"4","D:\\Examples\\ReactJS\\manage-map\\src\\reportWebVitals.js":"5","D:\\Examples\\ReactJS\\manage-map\\src\\App.js":"6","D:\\Examples\\ReactJS\\manage-map\\src\\home.js":"7","D:\\Examples\\ReactJS\\manage-map\\src\\services\\upload_image.js":"8","D:\\Examples\\ReactJS\\manage-map\\src\\detail\\popup.js":"9"},{"size":2527,"mtime":1612414183121,"results":"10","hashOfConfig":"11"},{"size":3185,"mtime":1612368784563,"results":"12","hashOfConfig":"11"},{"size":500,"mtime":1611368067234,"results":"13","hashOfConfig":"11"},{"size":22257,"mtime":1615613019331,"results":"14","hashOfConfig":"11"},{"size":362,"mtime":1611368067234,"results":"15","hashOfConfig":"11"},{"size":918,"mtime":1614327056429,"results":"16","hashOfConfig":"11"},{"size":337,"mtime":1612368232075,"results":"17","hashOfConfig":"11"},{"size":0,"mtime":1612257777969,"results":"18","hashOfConfig":"11"},{"size":8398,"mtime":1614324396655,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"azwhr5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"D:\\Examples\\ReactJS\\manage-map\\src\\cards\\index.js",[],["42","43"],"D:\\Examples\\ReactJS\\manage-map\\src\\form-uplaod-image\\index.js",["44","45"],"import React, { useState, useEffect } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport styles from './styles.module.css';\r\nimport axios from 'axios';\r\nfunction FormUploadImage(props) {\r\n\r\n  const { register, handleSubmit, reset, getValues, setValue } = useForm({\r\n    defaultValues: {\r\n      title: '',\r\n      image: '',\r\n      description: ''\r\n    }\r\n  });\r\n  const [imgData, setImgData] = useState(null);\r\n\r\n  const onChangeImage = event => {\r\n    let file = event.target.files[0];\r\n    if (file && file.type !== \"image/png\" && file.type !== \"image/jpg\" && file.type !== \"image/jpeg\") {\r\n      window.alert(\"File does not support. You must use .png or .jpg \");\r\n      setValue('image', '')\r\n      return false;\r\n    }\r\n    if (file && file.size > 500000) {\r\n      window.alert(\"Please upload a file smaller than 50 MB\");\r\n      setValue('image', '')\r\n      return false;\r\n    }\r\n    setImgData(event.target.files[0]);\r\n  };\r\n\r\n  const onSubmit = async (dataForm) => {\r\n    let fd = new FormData()\r\n    fd.append(\"title\", dataForm.title);\r\n    fd.append(\"image\", imgData);\r\n    fd.append(\"description\", dataForm.description);\r\n    try {\r\n      await axios({\r\n        method: 'POST',\r\n        url: process.env.REACT_APP_URL_API + '/upload-image',\r\n        data: fd,\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      }).then(response => {\r\n        props.setListMap(response.data?.dataMaps || []);\r\n        reset();\r\n        console.log(response.data)\r\n      }).catch(function (error) {\r\n        alert('Error ' + Object.assign({}, error).response.status);\r\n      })\r\n    } catch (error) {\r\n      console.log('Error', JSON.stringify(error))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)} className={styles.form} enctype=\"multipart/form-data\">\r\n        <TextField\r\n          className={styles.inputWidth100}\r\n          label=\"Title Map\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          name=\"title\"\r\n          autoComplete=\"off\"\r\n          InputLabelProps={{ shrink: true }}\r\n          inputRef={register}\r\n        />\r\n        <div className={`${styles.labelTitle} ${styles.inputWidth100}`}>\r\n          <input\r\n            type=\"file\"\r\n            name=\"image\"\r\n            required\r\n            ref={register}\r\n            onChange={(e) => onChangeImage(e)}\r\n          />\r\n        </div>\r\n        <TextField\r\n          className={`${styles.marginTopDown10} ${styles.inputWidth100}`}\r\n          label=\"Mo ta\"\r\n          name=\"description\"\r\n          variant=\"outlined\"\r\n          multiline\r\n          rows={5}\r\n          InputLabelProps={{ shrink: true }}\r\n          inputRef={register}\r\n        />\r\n        <div style={{ marginTop: 10 }}>\r\n          <Button type=\"reset\" style={{ marginRight: 10 }} variant=\"contained\" color=\"primary\">\r\n            {\"Reset\"}\r\n          </Button>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            {\"LÆ°u\"}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n}\r\nexport default FormUploadImage","D:\\Examples\\ReactJS\\manage-map\\src\\index.js",[],"D:\\Examples\\ReactJS\\manage-map\\src\\detail\\index.js",["46","47","48","49","50","51","52","53","54"],"D:\\Examples\\ReactJS\\manage-map\\src\\reportWebVitals.js",[],"D:\\Examples\\ReactJS\\manage-map\\src\\App.js",["55"],"import './App.css';\nimport Home from \"./home\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport DetailMap from './detail'\nimport { useEffect } from 'react';\n\nfunction App() {\n\n  useEffect(() => {\n    document.title = \"Manage Map\"\n }, []);\n\n  return (\n    \n    <div className=\"App\">\n      <Router>\n        <div>\n          {/* <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n            </ul>\n          </nav> */}\n\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/detail/:id\">\n              <DetailMap />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Examples\\ReactJS\\manage-map\\src\\home.js",[],"D:\\Examples\\ReactJS\\manage-map\\src\\services\\upload_image.js",[],"D:\\Examples\\ReactJS\\manage-map\\src\\detail\\popup.js",["56","57","58"],"import React, { useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    marginTop10: {\r\n        marginTop: 10\r\n    }\r\n});\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nexport default function DetailAreaDialogs(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(props.isOpenPopup || false);\r\n    const [dataDetail, setDataDetail] = React.useState(props.dataDetail || {});\r\n    const [isOpenAlert, setOpenAlert] = useState(false)\r\n    const { register, handleSubmit, reset, setValue, getValues } = useForm({\r\n        defaultValues: {\r\n            map_id: props.dataDetail?.map_id || 0,\r\n            title: props.dataDetail?.title || '',\r\n            coordinatesSVG: props.dataDetail?.coordinatesSVG || '',\r\n            acreage: props.dataDetail?.acreage || 0,\r\n            perimeter: props.dataDetail?.perimeter || 0,\r\n            id: props.dataDetail?.id || 0,\r\n        }\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        setOpen(props.isOpenPopup || false)\r\n        setDataDetail(props.dataDetail || {})\r\n    }, [props])\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        props.setOpenPopup(false);\r\n    };\r\n\r\n    const onSubmit = async () => {\r\n        try {\r\n            let fd = new FormData()\r\n            fd.append(\"title\", getValues('title'));\r\n            fd.append(\"id\", getValues('id'));\r\n            fd.append(\"acreage\", getValues('acreage'));\r\n            fd.append(\"perimeter\", getValues('perimeter'));\r\n            const res = await axios.put(process.env.REACT_APP_URL_API + '/update-area', getValues());\r\n            if (res.status === 200) {\r\n                setOpen(false);\r\n                props.setOpenPopup(false);\r\n                props.setListArea(res.data.listAreas || []);\r\n                props.setOpenSuccess({open: true, type: 'success'});\r\n            }\r\n        } catch (error) {\r\n            console.log('Error', JSON.stringify(error))\r\n        }\r\n    }\r\n\r\n    const openAlert = () => {\r\n        setOpenAlert(true)\r\n    }\r\n\r\n    const handleCancelAlert = () => {\r\n        setOpenAlert(false)\r\n    }\r\n\r\n    const handleOkAlert = () => {\r\n        setOpenAlert(false)\r\n        handleClose()\r\n        props.setRemoveArea(true)\r\n    }\r\n\r\n    if (Object.keys(dataDetail).length > 0 && dataDetail.constructor === Object) {\r\n        return (\r\n            <div>\r\n                <Dialog open={isOpenAlert}>\r\n                    <DialogTitle >Are you sure?</DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={handleCancelAlert} color=\"primary\">\r\n                            {'Cancel'}\r\n                        </Button>\r\n                        <Button onClick={handleOkAlert} color=\"primary\">\r\n                            {'Ok'}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                        {dataDetail?.title}\r\n                    </DialogTitle>\r\n                    <DialogContent dividers style={{ minWidth: 300 }}>\r\n                        <form>\r\n                            <Typography gutterBottom>\r\n                                <TextField\r\n                                    className={classes.marginTop10}\r\n                                    label=\"Title Area\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    required\r\n                                    name=\"title\"\r\n                                    autoComplete=\"off\"\r\n                                    InputLabelProps={{ shrink: true }}\r\n                                    inputRef={register}\r\n                                    onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }}\r\n                                />\r\n                            </Typography>\r\n\r\n                            <Typography gutterBottom>\r\n                                <input ref={register} type=\"hidden\" name=\"coordinatesSVG\" />\r\n                                <input ref={register} type=\"hidden\" name=\"map_id\" />\r\n                                <input ref={register} type=\"hidden\" name=\"id\" />\r\n                            </Typography>\r\n\r\n                            <Typography gutterBottom>\r\n                                <TextField\r\n                                    className={classes.marginTop10}\r\n                                    label=\"Diá»n tÃ­ch\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    type=\"number\"\r\n                                    name=\"acreage\"\r\n                                    autoComplete=\"off\"\r\n                                    InputLabelProps={{ shrink: true }}\r\n                                    inputRef={register}\r\n                                    onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }}\r\n                                />\r\n                            </Typography>\r\n\r\n                            <Typography gutterBottom>\r\n                                <TextField\r\n                                    className={classes.marginTop10}\r\n                                    label=\"Chu Vi\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    type=\"number\"\r\n                                    name=\"perimeter\"\r\n                                    autoComplete=\"off\"\r\n                                    InputLabelProps={{ shrink: true }}\r\n                                    inputRef={register}\r\n                                    onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }}\r\n                                />\r\n                            </Typography>\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            {'Close'}\r\n                        </Button>\r\n                        <Button onClick={openAlert} color=\"primary\">\r\n                            {'Remove'}\r\n                        </Button>\r\n                        <Button onClick={onSubmit} color=\"primary\">\r\n                            {'Save'}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"63","severity":1,"message":"67","line":10,"column":42,"nodeType":"65","messageId":"66","endLine":10,"endColumn":51},{"ruleId":"63","severity":1,"message":"68","line":4,"column":46,"nodeType":"65","messageId":"66","endLine":4,"endColumn":61},{"ruleId":"63","severity":1,"message":"69","line":134,"column":23,"nodeType":"65","messageId":"66","endLine":134,"endColumn":35},{"ruleId":"63","severity":1,"message":"70","line":134,"column":44,"nodeType":"65","messageId":"66","endLine":134,"endColumn":52},{"ruleId":"63","severity":1,"message":"71","line":145,"column":12,"nodeType":"65","messageId":"66","endLine":145,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":183,"column":8,"nodeType":"74","endLine":183,"endColumn":15,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"73","line":203,"column":8,"nodeType":"74","endLine":203,"endColumn":15,"suggestions":"76"},{"ruleId":"72","severity":1,"message":"77","line":205,"column":15,"nodeType":"78","endLine":231,"endColumn":6},{"ruleId":"72","severity":1,"message":"79","line":231,"column":8,"nodeType":"74","endLine":231,"endColumn":21,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":550,"column":17,"nodeType":"83","endLine":550,"endColumn":195},{"ruleId":"63","severity":1,"message":"84","line":7,"column":3,"nodeType":"65","messageId":"66","endLine":7,"endColumn":7},{"ruleId":"63","severity":1,"message":"69","line":66,"column":23,"nodeType":"65","messageId":"66","endLine":66,"endColumn":35},{"ruleId":"63","severity":1,"message":"85","line":66,"column":37,"nodeType":"65","messageId":"66","endLine":66,"endColumn":42},{"ruleId":"63","severity":1,"message":"70","line":66,"column":44,"nodeType":"65","messageId":"66","endLine":66,"endColumn":52},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getValues' is assigned a value but never used.","'useLayoutEffect' is defined but never used.","'handleSubmit' is assigned a value but never used.","'setValue' is assigned a value but never used.","'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["88"],["89"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dataDetail.id', 'indexArea', and 'isRemoveArea'. Either include them or remove the dependency array.",["90"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'reset' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [id, props]",{"range":"97","text":"98"},"Update the dependencies array to be: [id, isAdd]",{"range":"99","text":"100"},"Update the dependencies array to be: [dataDetail.id, indexArea, isOpenPopup, isRemoveArea]",{"range":"101","text":"102"},[5949,5956],"[id, props]",[6706,6713],"[id, isAdd]",[7855,7868],"[dataDetail.id, indexArea, isOpenPopup, isRemoveArea]"]